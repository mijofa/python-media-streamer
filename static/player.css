/* Give all text a border colour so that it's readable on any background colour */
body {
    background: black;
    color: white;
    /* FIXME: Is there a CSS function that will let me set this to "background-color" rather than "black"? */
    text-shadow:
        -1px -0px 0 black,
        0px  -1px 0 black,
        -0px 1px  0 black,
        1px  0px  0 black;
}

#video-container, video {
    /* Fill the window */
    position: fixed;
    width: 100% ; height: 100%;
    top: 0 ; bottom: 0 ; left: 0 ; right: 0;
    z-index: 0;
}
#video-controls {
    position: fixed;
    bottom: 0;

    width: 100%;

    z-index: 10;  /* Stay above the video */
}

/* Make sure all the controls stay on the bottom, */
/* and that it's large enough to be somewhat more readable */
#video-controls * {
    min-width: 1em;
    min-height: 1em;
    font-size: xx-large;
    vertical-align: bottom;
}

/* Seek & progress bars */
#seek-container, #seek-container input { position: relative }
#seek-container input { display: block }
#seek-container * {
    width: 100%;
    /* Horizontally center the margins because they bring it a little under full width */
    margin-left: auto; margin-right: auto;
}
/* Put each of the "progress bar" canvases underneath the seek input */
#seek-container canvas {
    position: absolute;
    top: 0;
    height: 100%;
}
#seekable-canvas { z-index: 11 }  /* Data the server has ready to serve */
#buffered-canvas { z-index: 12 }  /* Data the client has buffered */
#seek-bar        { z-index: 13 }  /* Current media position */

/* Finally, actually style them with some colour */
#seek-container canvas { color: var(--accent-colour) }
#seekable-canvas { filter: opacity(33%) }
#buffered-canvas { filter: opacity(66%) }

/* Change the orientation of the volume & brightness sliders */
/* NOTE: Firefox sets the slider orientation with a HTML property, */
/*       for the most part I'm completely ignoring cross-browser-compatibility (for now) */
/*       but I like the simplicity of using that HTML property so I'm re-using it here. */
/*       It is still completely untested in anything but Chrome. */
/* FIXME: Just use "transform: rotate(270deg);"? */
input[type=range][orient=vertical] {
    width: 1em;
    writing-mode: bt-lr; /* IE */
    -webkit-appearance: slider-vertical; /* WebKit, Chrome/etc */
}

.vexpand-onhover { height: 1.5em }
.vexpand-onhover:hover { height: unset }

.toggle-onhover > .default-hidden     {display: none}
.toggle-onhover:hover        .default-hidden,
.toggle-onhover:focus-within .default-hidden {
    display: unset
}
.toggle-onhover:hover        .default-shown,
.toggle-onhover:focus-within .default-shown {
    display: none
}

/* Make the current state of toggle-buttons more visible */
/* FIXME: Replace all these text buttons with more fitting graphic representations */
button:active, button.active-button {
    border-style: inset;
    padding: 1px 6px;
}


/* I would actually prefer to have the controls slide off the screen rather than scale down to 0 height, */
/* but that had a bunch of confusing issues with trying to get the transition timing right. */
#video-controls {
    transition: transform 0.25s ease-in-out;
    transform-origin: bottom;
}
#video-controls.hidden:not(:hover) { transform: ScaleY(0) }
body.hide-mouse {cursor:none}


/* Subtitles styling */
::-webkit-media-text-track-container {
    /* FIXME: This is very browser specific, but setting the padding on the ::cue element has no effect. */
    /* FIXME: I think I'm gonna have to throw this whole idea away because WebVTT actually allows arbitrarily placed cues. */
    /* This is just so that the transition gets set first,
     * the actual CSS magic for this is done in the JS because I can't change the class of psuedo elements. */
    bottom: 0;
    transition: bottom 0.25s ease-in-out;  /* To match #video-controls */
}
::cue {
/* Chrome's default subtitle size scales up with the video size, so just don't mess with it. */
/*    font-size: xx-large; */
    opacity: 0.85;  /* Should be mostly unnoticable, but still leave the video vaguely visible */
    background: none;  /* Why the fuck does this even put the black background there by default? It should at least be mostly opaque */
}


.captions-menu-item {
    background-color: var(--accent-colour);
    opacity: 0.5;
    white-space: nowrap;
}
.captions-menu-item.active {
    background-color: var(--accent-colour);
    opacity: 1;
}
